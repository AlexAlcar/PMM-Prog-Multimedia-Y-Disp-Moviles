{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput, Button, List } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Espanya = function Espanya() {\n  var _useState = useState({\n    nombre: null,\n    continente: null,\n    capital: null,\n    moneda: null,\n    superficie: null,\n    idioma: null,\n    habitantes: null,\n    bandera: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      resPais = _useState2[0],\n      setResPais = _useState2[1];\n\n  var getData = function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://restcountries.com/v3.1/name/spain').then(function (response) {\n              if (response.ok) {\n                return response.json();\n              }\n\n              throw new Error('La petición ha fallado');\n            }, function (networkError) {\n              console.log(networkError.message);\n            }).then(function (jsonResponse) {\n              resPais({\n                nombre: jsonResponse[0].name.common,\n                continente: jsonResponse[0].continents[0],\n                capital: jsonResponse[0].capital[0],\n                moneda: jsonResponse[0].currencies,\n                superficie: jsonResponse[0].area,\n                idioma: jsonResponse[0].languages,\n                habitantes: jsonResponse[0].population,\n                bandera: jsonResponse[0].flag\n              });\n              console.log(jsonResponse[0]);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Espa\\xF1a\"\n    }), _jsxs(List.Section, {\n      children: [_jsxs(List.Accordion, {\n        title: \"Informaci\\xF3n sobre el pa\\xEDs\",\n        left: function left(props) {\n          return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n            icon: \"compass-outline\"\n          }));\n        },\n        children: [_jsx(List.Item, {\n          title: (\"Nombre: \", resPais.nombre)\n        }), _jsx(List.Item, {\n          title: \"Continente: \"\n        }), _jsx(List.Item, {\n          title: \"Capital: \"\n        })]\n      }), _jsx(List.Accordion, {\n        title: \"Informaci\\xF3n del tiempo\",\n        left: function left(props) {\n          return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n            icon: \"weather-lightning-rainy\"\n          }));\n        },\n        children: _jsx(List.Item, {\n          title: \"Tiempo meteorol\\xF3gico: \"\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  layout: {\n    flex: 1,\n    justifyContent: 'center',\n    textAlign: 'top',\n    padding: 8\n  },\n  separator: {\n    fontWeight: 'bold'\n  },\n  title: {\n    margin: 24,\n    fontSize: 20,\n    textAlign: 'top',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});\nexport default Espanya;","map":{"version":3,"sources":["D:/Proyectos/PMM_Evaluables/simulacroExamen/components/Espanya.js"],"names":["React","useState","useEffect","TextInput","Button","List","useNavigation","Espanya","nombre","continente","capital","moneda","superficie","idioma","habitantes","bandera","resPais","setResPais","getData","fetch","then","response","ok","json","Error","networkError","console","log","message","jsonResponse","name","common","continents","currencies","area","languages","population","flag","styles","title","props","StyleSheet","create","layout","flex","justifyContent","textAlign","padding","separator","fontWeight","margin","fontSize"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { TextInput, Button, List } from 'react-native-paper';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst Espanya = () => {\r\n    const [resPais, setResPais]=useState({\r\n        nombre:null,\r\n        continente:null,\r\n        capital: null,\r\n        moneda: null,\r\n        superficie:null,\r\n        idioma: null,\r\n        habitantes:null,\r\n        bandera:null,\r\n    })\r\n\r\n    const getData = async () => {\r\n        await fetch('https://restcountries.com/v3.1/name/spain').then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } throw new Error('La petición ha fallado');\r\n        }, networkError => {\r\n            console.log(networkError.message);\r\n        }).then(jsonResponse => {\r\n            resPais({\r\n                nombre: jsonResponse[0].name.common,\r\n                continente: jsonResponse[0].continents[0],\r\n                capital: jsonResponse[0].capital[0],\r\n                moneda:jsonResponse[0].currencies,\r\n                superficie:jsonResponse[0].area,\r\n                idioma:jsonResponse[0].languages,\r\n                habitantes:jsonResponse[0].population,\r\n                bandera:jsonResponse[0].flag\r\n            })\r\n            console.log(jsonResponse[0]);\r\n        });\r\n    }\r\n\r\n    useEffect(() =>{ \r\n        getData(); \r\n    },[])\r\n\r\n    return (\r\n        <View>\r\n            <Text style={styles.title}>España</Text>\r\n            <List.Section>\r\n      <List.Accordion\r\n        title=\"Información sobre el país\"\r\n        left={props => <List.Icon {...props} icon=\"compass-outline\" />}>\r\n        <List.Item title={\"Nombre: \", resPais.nombre}></List.Item>\r\n        <List.Item title=\"Continente: \" />\r\n        <List.Item title=\"Capital: \" />\r\n      </List.Accordion>\r\n\r\n      <List.Accordion\r\n        title=\"Información del tiempo\"\r\n        left={props => <List.Icon {...props} icon=\"weather-lightning-rainy\" />}>\r\n        <List.Item title=\"Tiempo meteorológico: \" />\r\n        \r\n      </List.Accordion>\r\n    </List.Section>\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    layout: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        textAlign: 'top',\r\n        padding: 8,\r\n    },\r\n    separator: {\r\n        fontWeight: 'bold',\r\n        \r\n    },\r\n    title: {\r\n        margin: 24,\r\n        fontSize: 20,\r\n        textAlign: 'top',\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n    },\r\n});\r\nexport default Espanya;"]},"metadata":{},"sourceType":"module"}