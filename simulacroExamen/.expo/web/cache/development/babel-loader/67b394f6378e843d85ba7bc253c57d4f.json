{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput, Button, List } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Espanya = function Espanya(props) {\n  var _useState = useState({\n    prevision: null,\n    temperatura: null,\n    temp_max: null,\n    temp_min: null,\n    vel_viento: null,\n    humedad: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      resTiempo = _useState2[0],\n      setResTiempo = _useState2[1];\n\n  var getData = function getData() {\n    var response, jsonResponse;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://restcountries.com/v3.1/name/spain'));\n\n          case 3:\n            response = _context.sent;\n\n            if (!response.ok) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            jsonResponse = _context.sent;\n            setResPais({\n              nombre: jsonResponse[0].name.common,\n              continente: jsonResponse[0].continents[0],\n              capital: jsonResponse[0].capital[0],\n              moneda: jsonResponse[0].currencies,\n              superficie: jsonResponse[0].area,\n              idioma: jsonResponse[0].languages,\n              habitantes: jsonResponse[0].population,\n              bandera: jsonResponse[0].flag\n            });\n            return _context.abrupt(\"return\", jsonResponse);\n\n          case 10:\n            throw new Error('La petición ha fallado');\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  };\n\n  var getWeather = function getWeather() {\n    var response, jsonResponse;\n    return _regeneratorRuntime.async(function getWeather$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://api.openweathermap.org/data/2.5/weather?q=spain,esp&units=metric&lang=es&APPID=f2b990c09e6f73102863cfe63a569f43'));\n\n          case 3:\n            response = _context2.sent;\n\n            if (!response.ok) {\n              _context2.next = 10;\n              break;\n            }\n\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            jsonResponse = _context2.sent;\n            setResTiempo({\n              prevision: jsonResponse.weather[0].description,\n              temperatura: jsonResponse.main.temp,\n              temp_max: jsonResponse.main.temp_max,\n              temp_min: jsonResponse.main.temp_min,\n              vel_viento: jsonResponse.wind.speed,\n              humedad: jsonResponse.main.humidity\n            });\n            return _context2.abrupt(\"return\", jsonResponse);\n\n          case 10:\n            throw new Error('La petición ha fallado');\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n    getWeather();\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Espa\\xF1a\"\n    }), _jsxs(List.Section, {\n      children: [_jsxs(List.Accordion, {\n        title: \"Informaci\\xF3n sobre el pa\\xEDs\",\n        left: function left(props) {\n          return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n            icon: \"compass-outline\"\n          }));\n        },\n        children: [_jsx(List.Item, {\n          title: \"Nombre: \" + resPais.nombre\n        }), _jsx(List.Item, {\n          title: \"Continente: \" + resPais.continente\n        }), _jsx(List.Item, {\n          title: \"Capital: \" + resPais.capital\n        })]\n      }), _jsx(List.Accordion, {\n        title: \"Informaci\\xF3n del tiempo\",\n        left: function left(props) {\n          return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n            icon: \"weather-lightning-rainy\"\n          }));\n        },\n        children: _jsx(List.Item, {\n          title: \"Tiempo meteorológico: \" + resTiempo.prevision\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  layout: {\n    flex: 1,\n    justifyContent: 'center',\n    textAlign: 'top',\n    padding: 8\n  },\n  separator: {\n    fontWeight: 'bold'\n  },\n  title: {\n    margin: 24,\n    fontSize: 20,\n    textAlign: 'top',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});\nexport default Espanya;","map":{"version":3,"sources":["D:/Proyectos/PMM_Evaluables/simulacroExamen/components/Espanya.js"],"names":["React","useState","useEffect","TextInput","Button","List","useNavigation","Espanya","props","prevision","temperatura","temp_max","temp_min","vel_viento","humedad","resTiempo","setResTiempo","getData","fetch","response","ok","json","jsonResponse","setResPais","nombre","name","common","continente","continents","capital","moneda","currencies","superficie","area","idioma","languages","habitantes","population","bandera","flag","Error","console","log","getWeather","weather","description","main","temp","wind","speed","humidity","styles","title","resPais","StyleSheet","create","layout","flex","justifyContent","textAlign","padding","separator","fontWeight","margin","fontSize"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,QAAwC,oBAAxC;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAEvB,kBAAgCP,QAAQ,CAAC;AACrCQ,IAAAA,SAAS,EAAC,IAD2B;AAErCC,IAAAA,WAAW,EAAC,IAFyB;AAGrCC,IAAAA,QAAQ,EAAC,IAH4B;AAIrCC,IAAAA,QAAQ,EAAC,IAJ4B;AAKrCC,IAAAA,UAAU,EAAC,IAL0B;AAMrCC,IAAAA,OAAO,EAAC;AAN6B,GAAD,CAAxC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AASA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEeC,KAAK,CAAC,2CAAD,CAFpB;;AAAA;AAEFC,YAAAA,QAFE;;AAAA,iBAGJA,QAAQ,CAACC,EAHL;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAIuBD,QAAQ,CAACE,IAAT,EAJvB;;AAAA;AAIEC,YAAAA,YAJF;AAKJC,YAAAA,UAAU,CAAC;AACPC,cAAAA,MAAM,EAAEF,YAAY,CAAC,CAAD,CAAZ,CAAgBG,IAAhB,CAAqBC,MADtB;AAEPC,cAAAA,UAAU,EAAEL,YAAY,CAAC,CAAD,CAAZ,CAAgBM,UAAhB,CAA2B,CAA3B,CAFL;AAGPC,cAAAA,OAAO,EAAEP,YAAY,CAAC,CAAD,CAAZ,CAAgBO,OAAhB,CAAwB,CAAxB,CAHF;AAIPC,cAAAA,MAAM,EAAER,YAAY,CAAC,CAAD,CAAZ,CAAgBS,UAJjB;AAKPC,cAAAA,UAAU,EAAEV,YAAY,CAAC,CAAD,CAAZ,CAAgBW,IALrB;AAMPC,cAAAA,MAAM,EAAEZ,YAAY,CAAC,CAAD,CAAZ,CAAgBa,SANjB;AAOPC,cAAAA,UAAU,EAAEd,YAAY,CAAC,CAAD,CAAZ,CAAgBe,UAPrB;AAQPC,cAAAA,OAAO,EAAEhB,YAAY,CAAC,CAAD,CAAZ,CAAgBiB;AARlB,aAAD,CAAV;AALI,6CAeGjB,YAfH;;AAAA;AAAA,kBAgBA,IAAIkB,KAAJ,CAAU,wBAAV,CAhBA;;AAAA;AAAA;AAAA;AAiBMC,YAAAA,OAAO,CAACC,GAAR;;AAjBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAoBA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEYzB,KAAK,CAAC,wHAAD,CAFjB;;AAAA;AAELC,YAAAA,QAFK;;AAAA,iBAGPA,QAAQ,CAACC,EAHF;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAIoBD,QAAQ,CAACE,IAAT,EAJpB;;AAAA;AAIDC,YAAAA,YAJC;AAKPN,YAAAA,YAAY,CAAC;AACTP,cAAAA,SAAS,EAAEa,YAAY,CAACsB,OAAb,CAAqB,CAArB,EAAwBC,WAD1B;AAETnC,cAAAA,WAAW,EAAEY,YAAY,CAACwB,IAAb,CAAkBC,IAFtB;AAGTpC,cAAAA,QAAQ,EAAEW,YAAY,CAACwB,IAAb,CAAkBnC,QAHnB;AAITC,cAAAA,QAAQ,EAAEU,YAAY,CAACwB,IAAb,CAAkBlC,QAJnB;AAKTC,cAAAA,UAAU,EAAES,YAAY,CAAC0B,IAAb,CAAkBC,KALrB;AAMTnC,cAAAA,OAAO,EAAEQ,YAAY,CAACwB,IAAb,CAAkBI;AANlB,aAAD,CAAZ;AALO,8CAaA5B,YAbA;;AAAA;AAAA,kBAcH,IAAIkB,KAAJ,CAAU,wBAAV,CAdG;;AAAA;AAAA;AAAA;AAeGC,YAAAA,OAAO,CAACC,GAAR;;AAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAkBAxC,EAAAA,SAAS,CAAC,YAAM;AACZe,IAAAA,OAAO;AACP0B,IAAAA,UAAU;AACb,GAHQ,EAGN,EAHM,CAAT;AAKA,SACI,MAAC,IAAD;AAAA,eACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEQ,MAAM,CAACC,KAApB;AAAA;AAAA,MADJ,EAEI,MAAC,IAAD,CAAM,OAAN;AAAA,iBACI,MAAC,IAAD,CAAM,SAAN;AACI,QAAA,KAAK,EAAC,iCADV;AAEI,QAAA,IAAI,EAAE,cAAA5C,KAAK;AAAA,iBAAI,KAAC,IAAD,CAAM,IAAN,kCAAeA,KAAf;AAAsB,YAAA,IAAI,EAAC;AAA3B,aAAJ;AAAA,SAFf;AAAA,mBAGI,KAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAE,aAAa6C,OAAO,CAAC7B;AAAvC,UAHJ,EAII,KAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAE,iBAAiB6B,OAAO,CAAC1B;AAA3C,UAJJ,EAKI,KAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAE,cAAc0B,OAAO,CAACxB;AAAxC,UALJ;AAAA,QADJ,EASI,KAAC,IAAD,CAAM,SAAN;AACI,QAAA,KAAK,EAAC,2BADV;AAEI,QAAA,IAAI,EAAE,cAAArB,KAAK;AAAA,iBAAI,KAAC,IAAD,CAAM,IAAN,kCAAeA,KAAf;AAAsB,YAAA,IAAI,EAAC;AAA3B,aAAJ;AAAA,SAFf;AAAA,kBAGI,KAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAE,2BAA2BO,SAAS,CAACN;AAAvD;AAHJ,QATJ;AAAA,MAFJ;AAAA,IADJ;AAsBH,CA5ED;;AA8EA,IAAM0C,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,MAAM,EAAE;AACJC,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,cAAc,EAAE,QAFZ;AAGJC,IAAAA,SAAS,EAAE,KAHP;AAIJC,IAAAA,OAAO,EAAE;AAJL,GADqB;AAO7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,UAAU,EAAE;AADL,GAPkB;AAW7BV,EAAAA,KAAK,EAAE;AACHW,IAAAA,MAAM,EAAE,EADL;AAEHC,IAAAA,QAAQ,EAAE,EAFP;AAGHL,IAAAA,SAAS,EAAE,KAHR;AAIHG,IAAAA,UAAU,EAAE,MAJT;AAKHH,IAAAA,SAAS,EAAE;AALR;AAXsB,CAAlB,CAAf;AAmBA,eAAepD,OAAf","sourcesContent":["import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { TextInput, Button, List } from 'react-native-paper';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst Espanya = (props) => {\r\n\r\n    const [resTiempo, setResTiempo]=useState({\r\n        prevision:null,\r\n        temperatura:null,\r\n        temp_max:null,\r\n        temp_min:null,\r\n        vel_viento:null,\r\n        humedad:null,\r\n    });\r\n\r\n    const getData = async () => {\r\n        try {\r\n            const response = await fetch('https://restcountries.com/v3.1/name/spain');\r\n            if (response.ok) {\r\n                const jsonResponse = await response.json();\r\n                setResPais({\r\n                    nombre: jsonResponse[0].name.common,\r\n                    continente: jsonResponse[0].continents[0],\r\n                    capital: jsonResponse[0].capital[0],\r\n                    moneda: jsonResponse[0].currencies,\r\n                    superficie: jsonResponse[0].area,\r\n                    idioma: jsonResponse[0].languages,\r\n                    habitantes: jsonResponse[0].population,\r\n                    bandera: jsonResponse[0].flag\r\n                })\r\n                return jsonResponse;\r\n            } throw new Error('La petición ha fallado');\r\n        } catch (error) { console.log(error); }\r\n    }\r\n\r\n    const getWeather = async () => {\r\n        try {\r\n            const response = await fetch('http://api.openweathermap.org/data/2.5/weather?q=spain,esp&units=metric&lang=es&APPID=f2b990c09e6f73102863cfe63a569f43');\r\n            if (response.ok) {\r\n                const jsonResponse = await response.json();\r\n                setResTiempo({\r\n                    prevision: jsonResponse.weather[0].description,\r\n                    temperatura: jsonResponse.main.temp,\r\n                    temp_max: jsonResponse.main.temp_max,\r\n                    temp_min: jsonResponse.main.temp_min,\r\n                    vel_viento: jsonResponse.wind.speed,\r\n                    humedad: jsonResponse.main.humidity,\r\n                })\r\n                return jsonResponse;\r\n            } throw new Error('La petición ha fallado');\r\n        } catch (error) { console.log(error); }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();\r\n        getWeather();\r\n    }, [])\r\n\r\n    return (\r\n        <View>\r\n            <Text style={styles.title}>España</Text>\r\n            <List.Section>\r\n                <List.Accordion\r\n                    title=\"Información sobre el país\"\r\n                    left={props => <List.Icon {...props} icon=\"compass-outline\" />}>\r\n                    <List.Item title={\"Nombre: \" + resPais.nombre}></List.Item>\r\n                    <List.Item title={\"Continente: \" + resPais.continente} />\r\n                    <List.Item title={\"Capital: \" + resPais.capital} />\r\n                </List.Accordion>\r\n\r\n                <List.Accordion\r\n                    title=\"Información del tiempo\"\r\n                    left={props => <List.Icon {...props} icon=\"weather-lightning-rainy\" />}>\r\n                    <List.Item title={\"Tiempo meteorológico: \" + resTiempo.prevision} />\r\n\r\n                </List.Accordion>\r\n            </List.Section>\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    layout: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        textAlign: 'top',\r\n        padding: 8,\r\n    },\r\n    separator: {\r\n        fontWeight: 'bold',\r\n\r\n    },\r\n    title: {\r\n        margin: 24,\r\n        fontSize: 20,\r\n        textAlign: 'top',\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n    },\r\n});\r\nexport default Espanya;"]},"metadata":{},"sourceType":"module"}